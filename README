# README

## Break Bricks

Break Bricks is a Breakout/Arkanoid inspired game to demonstrate a sprite
renderer, using modern OpenGL (3.3) and sprite collision and resolution. It is
based on:
<https://learnopengl.com/In-Practice/2D-Game/Breakout>
It has been converted to modern C and I felt the advanced AABB collision
detection used in the guide was over the top, for this type of game. So, most
of the game code is my own, with collision resolution based on an excellent
article I found (see below).

Some inspiration has been taken from:
<https://duriansoftware.com/joe/an-intro-to-modern-opengl.-table-of-contents>

Also:
<https://jasonliang.js.org/batch-renderer.html>

The game only runs at 1080p but uses the refresh rate of the desktop on the
main monitor. If the main monitor is already running at 1080p the game runs in
a borderless window. The game logic isn't tied to frame rate so it will play
the same at 60Hz or 500Hz. Higher frame rates will make the ball and paddle
movements slicker.

I've also implemented the optimisations recommended at the end of the guide:
sprite sheets and triangle strips. Space partitioning algorithms are not
needed as my collision detection uses the fact that the bricks are in a fixed
grid and the paddle doesn't move on the y-axis.

The build environment is MSYS2 as that gives me a modern C environment using a
Linux tool chain but producing native windows binaries. In theory, the game
should compile and run on Linux and MacOS but I haven't tested that.

## AABB Collision Resoultion

<https://nightblade9.github.io/godot-gamedev/2020/a-primer-on-aabb-collision-resolution.html>

1) Detect if objects are about to collide.
2) Calculate distance between objects about to collide.
3) Smallest distance tells us which axis will collide first.
4) Resolve collision on axis that collides first.

As long as the objects aren't moving too fast and the collision resolution is
run at a high enough rate tunnelling shouldn't be a problem.

## Directory Organization

break-bricks/
├── LICENSE
├── Makefile
├── README
├── extern/ - external dependencies
├── image/
├── shader/ - GLSL shaders
└── src/
    ├── main.c
    ├── util.c
    ├── game/ - game play subsystem
    │   └── game.c
    └── gfx/  - OpenGL graphics subsystem
        ├── font.c
        ├── gfx.c
        ├── quad.c
        ├── rend.c
        ├── screen.c
        ├── shader.c
        └── tex.c

## Credits and Licences

Break Bricks source:

glfw (linking):
<https://www.glfw.org/>
zlib/libpng License:
<https://www.glfw.org/license.html>

glad (generated code only):
<https://github.com/Dav1dde/glad>
CC0 License:
<https://creativecommons.org/publicdomain/zero/1.0/>

miniaudio:
<https://miniaud.io/>
MIT No Attribution:
<https://github.com/aws/mit-0>

stb_image.h
stb_rect_pack.h
stb_truetype.h
<https://github.com/nothings/stb>
Public Doman:
<https://github.com/nothings/stb/blob/master/LICENSE>

Space Skybox by Westbeam:
<https://opengameart.org/content/space-skyboxes-1>
CC0 License:
<https://creativecommons.org/publicdomain/zero/1.0/>

Free SFX by Kronbits:
<https://kronbits.itch.io/freesfx>
CC0 License:
<https://creativecommons.org/publicdomain/zero/1.0/>

Astroids by HoliznaCC0:
<https://freemusicarchive.org/music/holiznacc0/tiny-plastic-video-games-for-long-anxious-space-travel/astroids/>
CC0 License:
<https://creativecommons.org/publicdomain/zero/1.0/>

Jupiteroid Font:
<https://ggbot.itch.io/jupiteroid-font>
CC0 License:
<https://creativecommons.org/publicdomain/zero/1.0/>

Stars by Bonsaiheldin:
https://opengameart.org/content/stars-parallax-backgrounds
CC0 License:
<https://creativecommons.org/publicdomain/zero/1.0/>

Most Amazing High Definition Image of Earth:
https://commons.wikimedia.org/wiki/File:North_America_from_low_orbiting_satellite_Suomi_NPP.jpg
NASA/NOAA/GSFC/Suomi NPP/VIIRS/Norman Kuring, Public domain, via Wikimedia Commons

Blueish-white water ice clouds hang above the volcanoes of Tharsis, on Mars.
https://commons.wikimedia.org/wiki/File:Water_ice_clouds_hanging_above_Tharsis_PIA02653.jpg
NASA/JPL/MSSS, Public domain, via Wikimedia Commons

Jupiter, image taken by NASA's Hubble Space Telescope:
https://commons.wikimedia.org/wiki/File:Jupiter,_image_taken_by_NASA%27s_Hubble_Space_Telescope,_June_2019.png
NASA, ESA, and A. Simon (NASA Goddard), Public domain, via Wikimedia Commons

## MSYS2

Packages:

- mingw-w64-ucrt-x86_64-cglm
- mingw-w64-ucrt-x86_64-gcc
- mingw-w64-ucrt-x86_64-glfw
- mingw-w64-ucrt-x86_64-stb
